--You need couchimport and couchexport tools to move data in and outof Cloudant

npm install -g couchimport

couchimport --version


--You need mongoimport and mongoexport tools to move data in and out of mongodb
wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu1804-x86_64-100.3.1.tgz
tar -xf mongodb-database-tools-ubuntu1804-x86_64-100.3.1.tgz
export PATH=$PATH:/home/project/mongodb-database-tools-ubuntu1804-x86_64-100.3.1/bin
echo "done"
 
 mongoimport --version
 
  --Setup cloundant URL
 
 export CLOUDANTURL="https://apikey-v2-1cfa23wfx1i2yoink5mqyb7uzsgj30ov8d8blt0hante:f243210ba3c67dd8a4f5da494f8a4cc6@74c3c1ef-ddf9-4e78-977d-d4818aee06f9-bluemix.cloudantnosqldb.appdomain.cloud"
 
 --next export the diamonds database to csv file
 couchexport --url $CLOUDANTURL --db diamonds --delimiter "," > diamonds.csv
 
 --export to json and save to file 
couchexport --url $CLOUDANTURL --db diamonds --type jsonl > diamonds.json

couchexport --url $CLOUDANTURL --db movies --type jsonl > movies.json

--mongo time
start_mongo

--import json data into mongo 
mongoimport -u root -p MTU4NTctc3RlYXI1 --authenticationDatabase admin --db training --collection diamonds --file diamonds.json

mongoimport -u root -p MjUzODMtc3RlYXI1 --authenticationDatabase admin --db entertainment --collection movies --file movies.json

--find year in which most number of movies were released
db.movies.aggregate([
{
    "$group":{
        "_id":"$year",
        "moviecount":{"$sum":1}
        }
},
{
    "$sort":{"moviecount":-1}
},
{
    "$limit":1
}
])

--find count of movies released after year 1999
db.movies.count({year:{$gt: 1999}})

--find average votes for year 2007
db.movies.aggregate([{$match:{year:2007}}, {"$group":{"_id":"$year","avg_votes":{"$avg":"$Votes"}}}])


--export 3 fields of mongo data to csv 
mongoexport -u root -p MTU4NTctc3RlYXI1 --authenticationDatabase admin --db training --collection diamonds --out mongodb_exported_data.csv --type=csv --fields _id,clarity,cut,price


mongoexport -u root -p MjUzODMtc3RlYXI1 --authenticationDatabase admin --db entertainment --collection movies --out partial_data.csv --type=csv --fields _id,title,year,rating,director


--cassandra time
start_cassandra
cqlsh --username cassandra --password MzE2Nzctc3RlYXI1

--create training keyspace
CREATE KEYSPACE training  
WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3};

--create diamonds table
use training; 
CREATE TABLE diamonds(
id int PRIMARY KEY,
clarity text,
cut text,
price int
);

--copy data into cassandra table
use training;
COPY training.diamonds(id,clarity,cut,price) FROM 'mongodb_exported_data.csv' WITH DELIMITER=',' AND HEADER=TRUE;

copy entertainment.movies(id,title,year,rating,director) from 'partial_data.csv' with delimiter=',' and header=TRUE;

--export cassandra diamonds to csv
COPY diamonds TO 'cassandra-diamonds.csv';

--create index on price
create index price_index on diamonds(price);

--all done
exit 